Modifications from the internal fork of the python-pytorch package.

diff --git a/miniz.h b/miniz.h
index 42e1ea2..5869ab9 100644
--- a/miniz.h
+++ b/miniz.h
@@ -123,7 +123,7 @@
 /* If MINIZ_NO_TIME is specified then the ZIP archive functions will not be able to get the current time, or */
 /* get/set file times, and the C run-time funcs that get/set times won't be called. */
 /* The current downside is the times written to your archives will be from 1979. */
-/*#define MINIZ_NO_TIME */
+#define MINIZ_NO_TIME
 
 /* Define MINIZ_NO_ARCHIVE_APIS to disable all ZIP archive API's. */
 /*#define MINIZ_NO_ARCHIVE_APIS */
@@ -135,7 +135,7 @@
 /*#define MINIZ_NO_ZLIB_APIS */
 
 /* Define MINIZ_NO_ZLIB_COMPATIBLE_NAME to disable zlib names, to prevent conflicts against stock zlib. */
-/*#define MINIZ_NO_ZLIB_COMPATIBLE_NAMES */
+#define MINIZ_NO_ZLIB_COMPATIBLE_NAMES
 
 /* Define MINIZ_NO_MALLOC to disable all calls to malloc, free, and realloc. 
    Note if MINIZ_NO_MALLOC is defined then the user must always provide custom user alloc/free/realloc
@@ -172,8 +172,7 @@
 #if !defined(MINIZ_USE_UNALIGNED_LOADS_AND_STORES)
 #if MINIZ_X86_OR_X64_CPU
 /* Set MINIZ_USE_UNALIGNED_LOADS_AND_STORES to 1 on CPU's that permit efficient integer loads and stores from unaligned addresses. */
-#define MINIZ_USE_UNALIGNED_LOADS_AND_STORES 1
-#define MINIZ_UNALIGNED_USE_MEMCPY
+#define MINIZ_USE_UNALIGNED_LOADS_AND_STORES 0
 #else
 #define MINIZ_USE_UNALIGNED_LOADS_AND_STORES 0
 #endif
diff --git a/miniz_zip.h b/miniz_zip.h
index 82502bd..3d92255 100644
--- a/miniz_zip.h
+++ b/miniz_zip.h
@@ -150,7 +150,7 @@ typedef enum {
     MZ_ZIP_TOTAL_ERRORS
 } mz_zip_error;
 
-typedef struct
+typedef struct mz_zip_archive
 {
     mz_uint64 m_archive_size;
     mz_uint64 m_central_directory_file_ofs;
