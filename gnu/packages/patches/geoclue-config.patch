Allow the configuration file and directory to be specified via environment
variables.

--- a/src/gclue-config.c
+++ b/src/gclue-config.c
@@ -555,22 +555,32 @@
         char *name;
         gsize i;
 
+        const char *config_file_path;
+        const char *config_d_dir;
+
+        config_file_path = g_getenv ("GEOCLUE_CONFIG_FILE");
+        if (!config_file_path)
+                config_file_path = CONFIG_FILE_PATH;
+        config_d_dir = g_getenv ("GEOCLUE_CONFIG_D_DIR");
+        if (!config_d_dir)
+                config_d_dir = CONFIG_D_DIRECTORY;
+
         config->priv = gclue_config_get_instance_private (config);
         config->priv->key_file = g_key_file_new ();
 
         /* Load config file from default path, log all missing parameters */
-        load_config_file (config, CONFIG_FILE_PATH, TRUE);
+        load_config_file (config, config_file_path, TRUE);
 
         /*
          * Apply config overwrites from conf.d style config files,
          * files are sorted alphabetically, example: '90-config.conf'
          * will overwrite '50-config.conf'.
          */
-        dir = g_dir_open (CONFIG_D_DIRECTORY, 0, &error);
+        dir = g_dir_open (config_d_dir, 0, &error);
 
         if (error != NULL) {
                 g_warning ("Failed to open %s: %s",
-                           CONFIG_D_DIRECTORY, error->message);
+                           config_d_dir, error->message);
                 goto out;
         }
 
@@ -587,7 +597,7 @@
         for (i = 0; i < files->len; i++) {
                 g_autofree char *path = NULL;
 
-                path = g_build_filename (CONFIG_D_DIRECTORY,
+                path = g_build_filename (config_d_dir,
                                          g_array_index (files, char *, i),
                                          NULL);
                 load_config_file (config, path, FALSE);
